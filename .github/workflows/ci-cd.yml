name: Java CI/CD Pipeline

on:
  push:
    branches: [ main]
  pull_request:
    branches: [ main]
env:
  JAVA_VERSION: '21'
  GRADLE_VERSION: '8.7'
  POSTGRES_IMAGE: 'postgres:15'
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    name: Build and Test
    services:
      postgres:
        image: ${{ env.POSTGRES_IMAGE }}
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5434:5432
    steps:
    # - name: Setup Java ${{ env.JAVA_VERSION }}
    #   uses: actions/setup-java@v4
    #   with:
    #     java-version: ${{ env.JAVA_VERSION }}
    #     distribution: 'temurin'
    #     cache: 'gradle'
        
    # - name: Setup Gradle ${{ env.GRADLE_VERSION }}
    #   uses: gradle/actions/setup-gradle@v3
    #   with:
    #     gradle-version: ${{ env.GRADLE_VERSION }}
        
    - name: Check project structure
      run: |
        echo "📁 Project structure:"
        find . -name "build.gradle" -type f | head -20
        echo ""
        echo "📊 Gradle projects:"
        cd code && ./gradlew projects || true
        
    - name: 🏗️ Build and Publish Shared Modules
      run: |
        echo "🚀 Building and publishing shared modules to Maven Local..."
        cd code && ./gradlew publishAllShared --stacktrace --info
        
        echo "📦 Verifying published modules:"
        ls -la ~/.m2/repository/com/connection/ || echo "No Maven local repository found"
        
    - name: ⏳ Wait for services to be ready
      run: |
        echo "Waiting for services to be fully ready..."
        sleep 5
        
        echo "Checking PostgreSQL..."
        pg_isready -h localhost -p 5434 -U test_user || echo "PostgreSQL not ready yet"
        
        echo "All services should be ready now"
        
    - name: 🧪 Run All Tests
      run: |
        echo "🧪 Running all tests with testAll task..."
        cd code && ./gradlew allTest --continue
        
      continue-on-error: true  # Продолжить даже если тесты упали
      
    - name: 📊 Generate Test Reports
      if: always()
      run: |
        echo "📊 Generating test reports..."
        cd code && ./gradlew generateCombinedAllureReport --no-daemon
        
    # - name: 📦 Build All Services
    #   if: always()
    #   run: |
    #     echo "📦 Building all service modules..."
    #     cd code && ./gradlew buildAll --no-daemon --parallel -x test
        
    # - name: 🎯 Check Test Results
    #   if: always()
    #   run: |
    #     echo "🎯 Test Results Summary:"
    #     find . -name "TEST-*.xml" -path "*/build/test-results/*" | head -5 | while read file; do
    #       echo "📄 Test file: $file"
    #       if command -v xmllint >/dev/null 2>&1; then
    #         failures=$(xmllint --xpath 'string(//testsuite/@failures)' "$file" 2>/dev/null || echo "N/A")
    #         errors=$(xmllint --xpath 'string(//testsuite/@errors)' "$file" 2>/dev/null || echo "N/A")
    #         tests=$(xmllint --xpath 'string(//testsuite/@tests)' "$file" 2>/dev/null || echo "N/A")
    #         echo "   Tests: $tests, Failures: $failures, Errors: $errors"
    #       fi
    #     done
        
    - name: 💾 Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          **/build/test-results/
          **/build/reports/
          **/allure-history/
        retention-days: 30
        
    - name: 📈 Upload Allure Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: |
          build/reports/allure-report/
          build/allure-results/
        retention-days: 30
        
    - name: 📋 Upload Build Artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: service-jars
        path: |
          service/*/build/libs/*.jar
          shared/*/build/libs/*.jar
        retention-days: 7

# Настройки workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
