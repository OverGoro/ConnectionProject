name: Java CI/CD Pipeline

on:
  push:
    branches: [ main]
  pull_request:
    branches: [ main]
env:
  JAVA_VERSION: '21'
  GRADLE_VERSION: '8.7'
  POSTGRES_IMAGE: 'postgres:15'
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    name: Build and Test
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5434:5432
    steps:
    # –ö–ª—é—á–µ–≤–æ–π —à–∞–≥: –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    - name: üì• Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    # - name: Setup Java ${{ env.JAVA_VERSION }}
    #   uses: actions/setup-java@v4
    #   with:
    #     java-version: ${{ env.JAVA_VERSION }}
    #     distribution: 'temurin'
    #     cache: 'gradle'
        
    # - name: Setup Gradle ${{ env.GRADLE_VERSION }}
    #   uses: gradle/actions/setup-gradle@v3
    #   with:
    #     gradle-version: ${{ env.GRADLE_VERSION }}
    
    - name: Check project structure
      run: |
        echo "üìÅ Project structure:"
        ls -lah
        echo ""
        echo "üîç Searching for Gradle files:"
        find . -name "build.gradle" -o -name "build.gradle.kts" -o -name "gradlew" | head -20
        echo ""
        echo "üìä Gradle projects:"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–∞–ø–∫–∞ code –∏ gradlew
        if [ -d "code" ] && [ -f "code/gradlew" ]; then
          cd code && ./gradlew projects || true
        else
          echo "‚ùå –ü–∞–ø–∫–∞ 'code' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ gradlew –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
          echo "üìÇ –¢–µ–∫—É—â–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–æ–≤:"
          find . -type d -maxdepth 3 | sort
        fi
        
    - name: üèóÔ∏è Build and Publish Shared Modules
      run: |
        echo "üöÄ Building and publishing shared modules to Maven Local..."
        if [ -d "code" ] && [ -f "code/gradlew" ]; then
          cd code && ./gradlew publishAllShared --stacktrace --info
          
          echo "üì¶ Verifying published modules:"
          ls -la ~/.m2/repository/com/connection/ || echo "No Maven local repository found"
        else
          echo "‚ùå Cannot build - 'code' directory or gradlew not found"
          exit 1
        fi
        
    - name: ‚è≥ Wait for services to be ready
      run: |
        echo "Waiting for services to be fully ready..."
        sleep 10
        
        echo "Checking PostgreSQL..."
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        pg_isready -h localhost -p 5434 || echo "PostgreSQL not ready yet"
        
        echo "All services should be ready now"
        
    - name: üß™ Run All Tests
      run: |
        echo "üß™ Running all tests with testAll task..."
        if [ -d "code" ] && [ -f "code/gradlew" ]; then
          cd code && ./gradlew allTest --continue
        else
          echo "‚ùå Cannot run tests - 'code' directory or gradlew not found"
          exit 1
        fi
        
      continue-on-error: true  # –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–∞–∂–µ –µ—Å–ª–∏ —Ç–µ—Å—Ç—ã —É–ø–∞–ª–∏
      
    - name: üìä Generate Test Reports
      if: always()
      run: |
        echo "üìä Generating test reports..."
        if [ -d "code" ] && [ -f "code/gradlew" ]; then
          cd code && ./gradlew generateCombinedAllureReport --no-daemon
        else
          echo "‚ùå Cannot generate reports - 'code' directory or gradlew not found"
        fi
        
    - name: üíæ Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          **/build/test-results/
          **/build/reports/
          **/allure-history/
        retention-days: 30
        
    - name: üìà Upload Allure Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: |
          **/build/reports/allure-report/
          **/build/allure-results/
        retention-days: 30
        
    - name: üìã Upload Build Artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: service-jars
        path: |
          **/service/*/build/libs/*.jar
          **/shared/*/build/libs/*.jar
        retention-days: 7

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
