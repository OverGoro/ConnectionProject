name: Java CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  JAVA_VERSION: '21'
  GRADLE_VERSION: '8.7'
  POSTGRES_IMAGE: 'postgres:15'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    name: Build and Test
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5434:5432
    
    permissions:
      contents: read
      actions: read
      packages: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'gradle'
      
      - name: Install Allure
        run: |
          echo "🔍 Checking if Allure is already installed..."
          if allure --version > /dev/null 2>&1; then
            echo "✅ Allure is already installed"
            allure --version
          else
            echo "📥 Installing Allure..."
            sudo apt-get update
            sudo apt-get install -y default-jre-headless
            wget https://github.com/allure-framework/allure2/releases/download/2.27.0/allure_2.27.0-1_all.deb
            sudo dpkg -i allure_2.27.0-1_all.deb || true
            sudo apt-get install -f -y
            echo "✅ Allure installation completed"
            allure --version
          fi
      - name: Setup Report directories
        run: |
          mkdir -p code
          mkdir -p code/build
          mkdir -p code/build/allure-history
          mkdir -p code/build/allure-results
          mkdir -p code/build/allure-report
      
      - name: Create Gradle Wrapper
        run: |
          echo "🔧 Creating Gradle Wrapper..."
          cd code && gradle wrapper
          chmod +x gradlew
          echo "✅ Gradle Wrapper creation completed"
      
      - name: 🏗️ Build modules
        run: |
          echo "🚀 Building and publishing shared modules to Maven Local..."
          if [ -f "code/gradlew" ]; then
            cd code && ./gradlew build -x test -x copyJarToK8s
          else
            echo "❌ Cannot build - gradlew not found"
            exit 1
          fi
      
      - name: 🧪 Run All Tests
        run: |
          echo "🧪 Running all tests with testAll task..."
          if [ -f "code/gradlew" ]; then
            cd code && ./gradlew test -x generateAllureReport --continue
          else
            echo "❌ Cannot run tests - gradlew not found"
            exit 1
          fi
        continue-on-error: true
      
      - name: Cache
        uses: actions/cache@v4.3.0
        with:
          path: |
            **/.gradle
            **/gradle
            **/build
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - name: 📊 Collect Test Results
        if: always()
        run: |
          echo "📊 Collecting test results..."
          if [ -f "code/gradlew" ]; then
            cd code && ./gradlew collectAllureResults
          else
            echo "❌ Cannot generate reports - gradlew not found"
          fi

      - name: Allure Report with history
        # You may pin to the exact commit or the version.
        # uses: simple-elf/allure-report-action@53ebb757a2097edc77c53ecef4d454fc2f2f774c
        uses: simple-elf/allure-report-action@v1.13
        with:
          # Allure test result data dir
          allure_results: code/build/allure-results
          allure_report: code/build/allure-report
          allure_history: code/build/allure-history
      - name: Allure Report Cache
        uses: actions/cache@v4.3.0
        with:
          path: |
            code/build/allure-history
          key: ${{ runner.os }}-allure-report-${{ hashFiles('code/build/allure-history') }}
          restore-keys: |
            ${{ runner.os }}-allure-report-
      
      - name: Upload Allure HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-html-report
          path: code/build/allure-report
          retention-days: 1

  publish-report:
    if: always()
    needs: [build-and-test]
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Download Allure HTML Report
        uses: actions/download-artifact@v4
        with:
          name: allure-html-report
          path: public
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
