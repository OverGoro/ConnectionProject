spring.application.name=auth-service

spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration


# Включить Swagger
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true

# Настройки для отладки
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs
springdoc.show-actuator=true

# Если нужно ограничить package scanning
# springdoc.packages-to-scan=com.service.auth.controller
springdoc.paths-to-match=/api/**


app.jwt.access-token.expiration=900
app.jwt.refresh-token.expiration=259200
app.jwt.secret=my_super_secret_jwt_key_256_bits_long_enough_12345


# Client DataSource XA Configuration
app.datasource.client.xa-data-source-class-name=org.postgresql.xa.PGXADataSource
app.datasource.client.xa-properties.url=jdbc:postgresql://localhost:5433/test_db
app.datasource.client.xa-properties.user=test_user
app.datasource.client.xa-properties.password=test_password
app.datasource.client.unique-resource-name=clientXADataSource
app.datasource.client.pool-size=5
app.datasource.client.max-pool-size=10
app.datasource.client.min-pool-size=2
app.datasource.client.borrow-connection-timeout=300
app.datasource.client.max-idle-time=60
app.datasource.client.max-lifetime=120
app.datasource.client.reap-timeout=30000
app.datasource.client.test-query=SELECT 1
app.datasource.client.maintenance-interval=60
app.datasource.client.max-retries=3
app.datasource.client.retry-delay=5000

# Refresh Token DataSource XA Configuration
app.datasource.refresh-token.xa-data-source-class-name=org.postgresql.xa.PGXADataSource
app.datasource.refresh-token.xa-properties.url=jdbc:postgresql://localhost:5433/test_db
app.datasource.refresh-token.xa-properties.user=test_user
app.datasource.refresh-token.xa-properties.password=test_password
app.datasource.refresh-token.unique-resource-name=refreshTokenXADataSource
app.datasource.refresh-token.pool-size=5
app.datasource.refresh-token.max-pool-size=10
app.datasource.refresh-token.min-pool-size=2
app.datasource.refresh-token.borrow-connection-timeout=300
app.datasource.refresh-token.max-idle-time=60
app.datasource.refresh-token.max-lifetime=120
app.datasource.refresh-token.reap-timeout=30000
app.datasource.refresh-token.test-query=SELECT 1
app.datasource.refresh-token.maintenance-interval=60
app.datasource.refresh-token.max-retries=3
app.datasource.refresh-token.retry-delay=5000


# ========================
# KAFKA CONFIGURATION
# ========================
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.properties.spring.json.trusted.packages=*

# Consumer Configuration
spring.kafka.consumer.group-id=auth-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.value.default.type=com.connection.common.events.Command

# Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Kafka Topics
app.kafka.topics.auth-commands=auth.commands
app.kafka.topics.auth-responses=auth.responses
app.kafka.topics.auth-events=auth.events