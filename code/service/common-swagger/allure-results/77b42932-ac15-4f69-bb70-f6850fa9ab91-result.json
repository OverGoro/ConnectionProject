{"uuid":"77b42932-ac15-4f69-bb70-f6850fa9ab91","historyId":"a87fb47b6cd79499589a23678bab850b","testCaseId":"[engine:junit-jupiter]/[class:com.service.device.auth.DeviceAuthServiceImplLondonTest]/[method:shouldRefreshDeviceAccessTokenWhenValid()]","testCaseName":"Refresh device access token - Positive","fullName":"com.service.device.auth.DeviceAuthServiceImplLondonTest.shouldRefreshDeviceAccessTokenWhenValid","labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.service.device.auth.DeviceAuthServiceImplLondonTest]/[method:shouldRefreshDeviceAccessTokenWhenValid()]"},{"name":"host","value":"Yurik"},{"name":"thread","value":"282461@Yurik.main(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.service.device.auth.DeviceAuthServiceImplLondonTest"},{"name":"testClass","value":"com.service.device.auth.DeviceAuthServiceImplLondonTest"},{"name":"testMethod","value":"shouldRefreshDeviceAccessTokenWhenValid"},{"name":"suite","value":"Device Auth Service Implementation Tests - London Style"}],"links":[],"name":"Refresh device access token - Positive","status":"broken","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"\nStrict stubbing argument mismatch. Please check:\n - this invocation of 'toDALM' method:\n    deviceAccessTokenConverter.toDALM(\n    com.connection.device.token.model.DeviceAccessTokenBLM@58ff8d79\n);\n    -> at com.service.device.auth.DeviceAuthServiceImpl.refreshDeviceAccessToken(DeviceAuthServiceImpl.java:191)\n - has following stubbing(s) with different arguments:\n    1. deviceAccessTokenConverter.toDALM(\n    com.connection.device.token.model.DeviceAccessTokenBLM@65a48602\n);\n      -> at com.service.device.auth.DeviceAuthServiceImplLondonTest.shouldRefreshDeviceAccessTokenWhenValid(DeviceAuthServiceImplLondonTest.java:229)\nTypically, stubbing argument mismatch indicates user mistake when writing tests.\nMockito fails early so that you can debug potential problem easily.\nHowever, there are legit scenarios when this exception generates false negative signal:\n  - stubbing the same method multiple times using 'given().will()' or 'when().then()' API\n    Please use 'will().given()' or 'doReturn().when()' API for stubbing.\n  - stubbed method is intentionally invoked with different arguments by code under test\n    Please use default or 'silent' JUnit Rule (equivalent of Strictness.LENIENT).\nFor more information see javadoc for PotentialStubbingProblem class.","trace":"org.mockito.exceptions.misusing.PotentialStubbingProblem: \nStrict stubbing argument mismatch. Please check:\n - this invocation of 'toDALM' method:\n    deviceAccessTokenConverter.toDALM(\n    com.connection.device.token.model.DeviceAccessTokenBLM@58ff8d79\n);\n    -> at com.service.device.auth.DeviceAuthServiceImpl.refreshDeviceAccessToken(DeviceAuthServiceImpl.java:191)\n - has following stubbing(s) with different arguments:\n    1. deviceAccessTokenConverter.toDALM(\n    com.connection.device.token.model.DeviceAccessTokenBLM@65a48602\n);\n      -> at com.service.device.auth.DeviceAuthServiceImplLondonTest.shouldRefreshDeviceAccessTokenWhenValid(DeviceAuthServiceImplLondonTest.java:229)\nTypically, stubbing argument mismatch indicates user mistake when writing tests.\nMockito fails early so that you can debug potential problem easily.\nHowever, there are legit scenarios when this exception generates false negative signal:\n  - stubbing the same method multiple times using 'given().will()' or 'when().then()' API\n    Please use 'will().given()' or 'doReturn().when()' API for stubbing.\n  - stubbed method is intentionally invoked with different arguments by code under test\n    Please use default or 'silent' JUnit Rule (equivalent of Strictness.LENIENT).\nFor more information see javadoc for PotentialStubbingProblem class.\n\tat com.connection.device.token.converter.DeviceAccessTokenConverter.toDALM(DeviceAccessTokenConverter.java:54)\n\tat com.service.device.auth.DeviceAuthServiceImpl.refreshDeviceAccessToken(DeviceAuthServiceImpl.java:191)\n\tat com.service.device.auth.DeviceAuthServiceImplLondonTest.shouldRefreshDeviceAccessTokenWhenValid(DeviceAuthServiceImplLondonTest.java:232)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n"},"stage":"finished","description":"","steps":[],"attachments":[],"parameters":[],"start":1760051629438,"stop":1760051629459}