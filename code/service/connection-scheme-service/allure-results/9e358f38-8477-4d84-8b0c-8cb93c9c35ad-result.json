{"uuid":"9e358f38-8477-4d84-8b0c-8cb93c9c35ad","historyId":"2d95d44b8a90cc7d1ce2e74218d09367","testCaseId":"[engine:junit-jupiter]/[class:com.service.connectionscheme.ConnectionSchemeServiceImplTest]/[method:shouldThrowExceptionWhenSchemeNotBelongsToClient()]","testCaseName":"Get scheme by UID - Negative: Scheme doesn't belong to client","fullName":"com.service.connectionscheme.ConnectionSchemeServiceImplTest.shouldThrowExceptionWhenSchemeNotBelongsToClient","labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.service.connectionscheme.ConnectionSchemeServiceImplTest]/[method:shouldThrowExceptionWhenSchemeNotBelongsToClient()]"},{"name":"host","value":"Yurik"},{"name":"thread","value":"295764@Yurik.main(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.service.connectionscheme.ConnectionSchemeServiceImplTest"},{"name":"testClass","value":"com.service.connectionscheme.ConnectionSchemeServiceImplTest"},{"name":"testMethod","value":"shouldThrowExceptionWhenSchemeNotBelongsToClient"},{"name":"suite","value":"Connection Scheme Service Implementation Tests - Kafka Version"}],"links":[],"name":"Get scheme by UID - Negative: Scheme doesn't belong to client","status":"broken","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"\nFor com.service.connectionscheme.config.SecurityUtils, static mocking is already registered in the current thread\n\nTo create a new mock, the existing static mock registration must be deregistered","trace":"org.mockito.exceptions.base.MockitoException: \nFor com.service.connectionscheme.config.SecurityUtils, static mocking is already registered in the current thread\n\nTo create a new mock, the existing static mock registration must be deregistered\n\tat com.service.connectionscheme.ConnectionSchemeServiceImplTest.shouldThrowExceptionWhenSchemeNotBelongsToClient(ConnectionSchemeServiceImplTest.java:199)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n"},"stage":"finished","description":"","steps":[],"attachments":[],"parameters":[],"start":1760624351730,"stop":1760624351733}