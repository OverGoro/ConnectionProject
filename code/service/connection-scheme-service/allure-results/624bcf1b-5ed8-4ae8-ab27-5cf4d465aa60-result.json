{"uuid":"624bcf1b-5ed8-4ae8-ab27-5cf4d465aa60","historyId":"81d403a079551abc995843d51b5bbdda","testCaseId":"[engine:junit-jupiter]/[class:com.service.connectionscheme.ConnectionSchemeServiceImplTest]/[method:shouldThrowExceptionWhenTryingToChangeUid()]","testCaseName":"Update scheme - Negative: UID change attempt","fullName":"com.service.connectionscheme.ConnectionSchemeServiceImplTest.shouldThrowExceptionWhenTryingToChangeUid","labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.service.connectionscheme.ConnectionSchemeServiceImplTest]/[method:shouldThrowExceptionWhenTryingToChangeUid()]"},{"name":"host","value":"Yurik"},{"name":"thread","value":"295664@Yurik.main(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.service.connectionscheme.ConnectionSchemeServiceImplTest"},{"name":"testClass","value":"com.service.connectionscheme.ConnectionSchemeServiceImplTest"},{"name":"testMethod","value":"shouldThrowExceptionWhenTryingToChangeUid"},{"name":"suite","value":"Connection Scheme Service Implementation Tests - Kafka Version"}],"links":[],"name":"Update scheme - Negative: UID change attempt","status":"broken","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"\nFor com.service.connectionscheme.config.SecurityUtils, static mocking is already registered in the current thread\n\nTo create a new mock, the existing static mock registration must be deregistered","trace":"org.mockito.exceptions.base.MockitoException: \nFor com.service.connectionscheme.config.SecurityUtils, static mocking is already registered in the current thread\n\nTo create a new mock, the existing static mock registration must be deregistered\n\tat com.service.connectionscheme.ConnectionSchemeServiceImplTest.shouldThrowExceptionWhenTryingToChangeUid(ConnectionSchemeServiceImplTest.java:285)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n"},"stage":"finished","description":"","steps":[],"attachments":[],"parameters":[],"start":1760624347101,"stop":1760624347106}