{"uuid":"daafc1e7-aa40-481f-b49e-f3853e28c563","historyId":"806213289db8539900aa19841a01bce","testCaseId":"[engine:junit-jupiter]/[class:com.service.connectionscheme.ApiConnectionSchemeServiceImplTest]/[method:shouldThrowExceptionWhenSchemeAlreadyExists()]","testCaseName":"Create scheme - Negative: Scheme already exists","fullName":"com.service.connectionscheme.ApiConnectionSchemeServiceImplTest.shouldThrowExceptionWhenSchemeAlreadyExists","labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.service.connectionscheme.ApiConnectionSchemeServiceImplTest]/[method:shouldThrowExceptionWhenSchemeAlreadyExists()]"},{"name":"host","value":"Yurik"},{"name":"thread","value":"297513@Yurik.ForkJoinPool-1-worker-1(31)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.service.connectionscheme.ApiConnectionSchemeServiceImplTest"},{"name":"testClass","value":"com.service.connectionscheme.ApiConnectionSchemeServiceImplTest"},{"name":"testMethod","value":"shouldThrowExceptionWhenSchemeAlreadyExists"},{"name":"suite","value":"Connection Scheme Service Implementation Tests - Kafka Version"}],"links":[],"name":"Create scheme - Negative: Scheme already exists","status":"broken","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"\nCannot instantiate @InjectMocks field named 'schemeRepository'! Cause: the type 'ConnectionSchemeRepository' is an interface.\nYou haven't provided the instance at field declaration so I tried to construct the instance.\nExamples of correct usage of @InjectMocks:\n   @InjectMocks Service service = new Service();\n   @InjectMocks Service service;\n   //and... don't forget about some @Mocks for injection :)\n","trace":"org.mockito.exceptions.base.MockitoException: \nCannot instantiate @InjectMocks field named 'schemeRepository'! Cause: the type 'ConnectionSchemeRepository' is an interface.\nYou haven't provided the instance at field declaration so I tried to construct the instance.\nExamples of correct usage of @InjectMocks:\n   @InjectMocks Service service = new Service();\n   @InjectMocks Service service;\n   //and... don't forget about some @Mocks for injection :)\n\n\tat org.mockito.junit.jupiter.MockitoExtension.beforeEach(MockitoExtension.java:160)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)\n"},"stage":"finished","description":"","steps":[],"attachments":[],"parameters":[],"start":1760624577926,"stop":1760624577929}