apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-service-config
data:
  application.properties: |
    spring.application.name=auth-service
    server.port=8080
    
    spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
    
    springdoc.swagger-ui.enabled=true
    springdoc.api-docs.enabled=true
    springdoc.swagger-ui.path=/swagger-ui.html
    springdoc.api-docs.path=/api-docs
    springdoc.show-actuator=true
    springdoc.paths-to-match=/api/**
    
    app.jwt.access-token.expiration=900
    app.jwt.refresh-token.expiration=259200
    app.jwt.secret=my_super_secret_jwt_key_256_bits_long_enough_12345
    
    # Client DataSource XA Configuration
    app.datasource.client.xa-data-source-class-name=org.postgresql.xa.PGXADataSource
    app.datasource.client.xa-properties.url=jdbc:postgresql://postgres:5432/test_db
    app.datasource.client.xa-properties.user=test_user
    app.datasource.client.xa-properties.password=test_password
    app.datasource.client.unique-resource-name=clientXADataSource
    app.datasource.client.pool-size=5
    
    # Refresh Token DataSource XA Configuration
    app.datasource.refresh-token.xa-data-source-class-name=org.postgresql.xa.PGXADataSource
    app.datasource.refresh-token.xa-properties.url=jdbc:postgresql://postgres:5432/test_db
    app.datasource.refresh-token.xa-properties.user=test_user
    app.datasource.refresh-token.xa-properties.password=test_password
    app.datasource.refresh-token.unique-resource-name=refreshTokenXADataSource
    app.datasource.refresh-token.pool-size=5
    
    # Kafka Configuration
    spring.kafka.bootstrap-servers=kafka:9092
    spring.kafka.consumer.group-id=auth-service-group
    spring.kafka.consumer.auto-offset-reset=earliest
    spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
    spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
    spring.kafka.consumer.properties.spring.json.value.default.type=com.connection.common.events.Command
    spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
    spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
    
    app.kafka.topics.auth-commands=auth.commands
    app.kafka.topics.auth-responses=auth.responses
    app.kafka.topics.auth-events=auth.events
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
      - name: auth-service
        image: auth-service:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_CONFIG_LOCATION
          value: /app/config/application.properties
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: logs-volume
          mountPath: /app/logs
      volumes:
      - name: config-volume
        configMap:
          name: auth-service-config
      - name: logs-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
spec:
  selector:
    app: auth-service
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP