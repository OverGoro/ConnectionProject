apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-service-config
data:
  application.properties: |
    spring.application.name=auth-service
    server.port=8080
    
    spring.datasource.url=jdbc:postgresql://postgres:5432/test_db
    spring.datasource.username=test_user
    spring.datasource.password=test_password
    spring.jpa.hibernate.ddl-auto=update
    
    springdoc.swagger-ui.enabled=true
    springdoc.api-docs.enabled=true
    springdoc.swagger-ui.path=/swagger-ui.html
    springdoc.api-docs.path=/api-docs
    
    jwt.secret=your-jwt-secret-key-here
    jwt.expiration=86400000
  logback-spring.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <configuration>
        <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
        <include resource="org/springframework/boot/logging/logback/console-appender.xml"/>
        
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
        </root>
        
        <logger name="com.service.auth" level="DEBUG" additivity="false">
            <appender-ref ref="CONSOLE"/>
        </logger>
    </configuration>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
      - name: auth-service
        image: auth-service:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: logs-volume
          mountPath: /app/logs
      volumes:
      - name: config-volume
        configMap:
          name: auth-service-config
      - name: logs-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
spec:
  selector:
    app: auth-service
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP
