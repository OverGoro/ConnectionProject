version: '3.8'

services:
  # Zookeeper (требуется для Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app-network

  # Kafka Broker
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      
      # Основные изменения для внешнего подключения:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    
      
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - app-network

  # Auth Service
  # auth-service:
  #   build:
  #     context: ./auth-service
  #     dockerfile: Dockerfile
  #   container_name: auth-service
  #   ports:
  #     - "8081:8080"
  #   environment:
  #     SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
  #     SPRING_DATASOURCE_CLIENT_URL: jdbc:postgresql://postgres:5432/test_db
  #     SPRING_DATASOURCE_REFRESH_TOKEN_URL: jdbc:postgresql://postgres:5432/test_db
  #   depends_on:
  #     - kafka
  #   networks:
  #     - app-network

  # Buffer Service
  # buffer-service:
  #   build:
  #     context: ./buffer-service
  #     dockerfile: Dockerfile
  #   container_name: buffer-service
  #   ports:
  #     - "8082:8080"
  #   environment:
  #     SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
  #     SPRING_DATASOURCE_BUFFER_URL: jdbc:postgresql://postgres:5432/test_db
  #     AUTH_SERVICE_URL: http://auth-service:8080/api/auth-service
  #     CONNECTION_SCHEME_SERVICE_URL: http://connection-scheme-service:8080/api/connection-scheme-service
  #   depends_on:
  #     - kafka
  #     - auth-service
  #   networks:
  #     - app-network

  # Kafka UI (опционально - для мониторинга)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

# Внешний PostgreSQL (уже запущен отдельно)
# Предполагается, что PostgreSQL уже запущен на localhost:5432
# Или можно добавить его в композ, если нужно:
# postgres:
#   image: postgres:15
#   container_name: postgres
#   environment:
#     POSTGRES_DB: test_db
#     POSTGRES_USER: test_user
#     POSTGRES_PASSWORD: test_password
#   ports:
#     - "5432:5432"
#   networks:
#     - app-network
